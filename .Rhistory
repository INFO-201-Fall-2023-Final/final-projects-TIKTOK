rock_subgenre <- spotify_songs %>% filter(playlist_genre == "rock")
(PSb <- unique(rock_subgenre$playlist_subgenre))
ggplot(spotify_songs) + geom_col(mapping = aes(x = PSb, y = energy, fill = rock_subgenre))+
geom_bar(width=1) +
scale_y_continuous(expand = c(0,0))
rock_subgenre <- spotify_songs %>% filter(playlist_genre == "rock")
(PSb <- unique(rock_subgenre$playlist_subgenre))
ggplot(spotify_songs) + geom_col(mapping = aes(x = PSb, y = energy, fill = rock_subgenre))+
geom_bar(width=1) +
scale_y_continuous(expand = c(-10,20))
rock_subgenre <- spotify_songs %>% filter(playlist_genre == "rock")
(PSb <- unique(rock_subgenre$playlist_subgenre))
ggplot(spotify_songs) + geom_col(mapping = aes(x = PSb, y = energy, fill = rock_subgenre))
rock_subgenre <- spotify_songs %>% filter(playlist_genre == "rock")
(PSb <- unique(rock_subgenre$playlist_subgenre))
ggplot(spotify_songs) + geom_bar(mapping = aes(x = PSb, y = energy, fill = rock_subgenre))
rock_subgenre <- spotify_songs %>% filter(playlist_genre == "rock")
(PSb <- unique(rock_subgenre$playlist_subgenre))
ggplot(spotify_songs) + geom_bar(x = PSb, y = energy, fill = rock_subgenre)
rock_subgenre <- spotify_songs %>% filter(playlist_genre == "rock")
(PSb <- unique(rock_subgenre$playlist_subgenre))
ggplot(spotify_songs) + geom_bar(x = PSb, y =energy, fill = rock_subgenre))
rock_subgenre <- spotify_songs %>% filter(playlist_genre == "rock")
(PSb <- unique(rock_subgenre$playlist_subgenre))
ggplot(spotify_songs) + geom_bar(x = PSb, y = energy, fill = rock_subgenre))
rock_subgenre <- spotify_songs %>% filter(playlist_genre == "rock")
(PSb <- unique(rock_subgenre$playlist_subgenre))
ggplot(spotify_songs) + geom_bar(x = PSb, y = loudness, fill = rock_subgenre))
rock_subgenre <- spotify_songs %>% filter(playlist_genre == "rock")
(PSb <- unique(rock_subgenre$playlist_subgenre))
ggplot(spotify_songs) + geom_bar(x = PSb, y = loudness, fill = rock_subgenre)
latin_subgenre <- spotify_songs %>% filter(playlist_genre == "latin")
(RSb <- unique(latin_subgenre$playlist_subgenre))
Latin_sub <- factor(spotify_songs$playlist_subgenre, levels=c("tropical","latin pop","reggaeton","latin hip hop"))
rock_subgenre <- spotify_songs %>% filter(playlist_genre == "rock")
(PSb <- unique(rock_subgenre$playlist_subgenre))
ggplot(spotify_songs) + geom_col(mapping = aes(x = PSb, y = energy, fill = rock_subgenre))
rock_subgenre <- spotify_songs %>% filter(playlist_genre == "rock")
(PSb <- unique(rock_subgenre$playlist_subgenre))
ggplot(spotify_songs) + geom_col(mapping = aes(x = PSb, y = , fill = rock_subgenre))
plot <- spotify_songs %>% filter(playlist_genre == "rock") %>% group_by(playlist_subgenre) %>% summarize(mean_energy = mean(energy))
View(plot)
plot <- spotify_songs %>% filter(playlist_genre == "rock") %>% group_by(playlist_subgenre) %>% summarize(mean_energy = mean(energy))
ggplot(plot) + geom_col(mapping = aes(x = playlist_genre, y = mean_energy, fill=playlist_genre))
plot <- spotify_songs %>% filter(playlist_genre == "rock") %>% group_by(playlist_subgenre) %>% summarize(mean_energy = mean(energy))
ggplot(plot) + geom_col(mapping = aes(x = playlist_subgenre, y = mean_energy, fill=playlist_genre))
plot <- spotify_songs %>% filter(playlist_genre == "rock") %>% group_by(playlist_subgenre) %>% summarize(mean_energy = mean(energy))
ggplot(plot) + geom_col(mapping = aes(x = playlist_subgenre, y = mean_energy, fill=playlist_subgenre))
plot <- spotify_songs %>% filter(playlist_genre == "rock") %>% group_by(playlist_subgenre) %>% summarize(mean_loudness = mean(loudness))
ggplot(plot) + geom_col(mapping = aes(x = playlist_subgenre, y = mean_loudness, fill=playlist_subgenre))
(sum.loudness <- spotify_songs %>% summarize(Min = min(loudness, na.rm=TRUE),
Q1 = quantile(loudness, 0.25, na.rm=TRUE),
Median = quantile(loudness, 0.50, na.rm=TRUE),
Q3 = quantile(loudness, 0.75, na.rm=TRUE),
Max = max(loudness, na.rm=TRUE),
mean = mean(loudness, na.rm=TRUE),
SD = sd(loudness, na.rm=TRUE)))
(sum.energy <- spotify_songs %>% summarize(Min = min(energy, na.rm=TRUE),
Q1 = quantile(energy, 0.25, na.rm=TRUE),
Median = quantile(energy, 0.50, na.rm=TRUE),
Q3 = quantile(energy, 0.75, na.rm=TRUE),
Max = max(energy, na.rm=TRUE),
mean = mean(energy, na.rm=TRUE),
SD = sd(energy, na.rm=TRUE)))
plot <- spotify_songs %>% filter(playlist_genre == "rock") %>% group_by(playlist_subgenre) %>% summarize(mean_energy = mean(energy))
ggplot(plot) + geom_col(mapping = aes(x = playlist_subgenre, y = mean_energy, fill=playlist_subgenre))
lm1.out <- lm( spotify_songs$loudness ~ spotify_songs$energy)
summary(lm1.out)
summary(spotify_songs)
plot(spotify_songs$energy, spotify_songs$loudness,
xlab="Energy of the track",
ylab="Loudness of the track", pch=19)
abline(lm1.out, lty=2, lwd=2, col="blue")
(sum.loudness <- spotify_songs %>% summarize(Min = min(loudness, na.rm=TRUE),
Q1 = quantile(loudness, 0.25, na.rm=TRUE),
Median = quantile(loudness, 0.50, na.rm=TRUE),
Q3 = quantile(loudness, 0.75, na.rm=TRUE),
Max = max(loudness, na.rm=TRUE),
mean = mean(loudness, na.rm=TRUE),
SD = sd(loudness, na.rm=TRUE)))
(sum.energy <- spotify_songs %>% summarize(Min = min(energy, na.rm=TRUE),
Q1 = quantile(energy, 0.25, na.rm=TRUE),
Median = quantile(energy, 0.50, na.rm=TRUE),
Q3 = quantile(energy, 0.75, na.rm=TRUE),
Max = max(energy, na.rm=TRUE),
mean = mean(energy, na.rm=TRUE),
SD = sd(energy, na.rm=TRUE)))
data("spotify_songs")
?spotify_songs
h1 <- ggplot(data = spotify_songs, aes(x = loudness)) +
geom_histogram(bins = 8, colour = 1, fill = "white") +
xlab("loudness of track")
h2 <- ggplot(spotify_songs, aes(x=loudness, y="")) +
geom_boxplot() +
xlab("loudness of track")
h3 <- ggplot(data = spotify_songs, aes(x = energy)) +
geom_histogram(bins = 8, colour = 1, fill = "white") +
xlab("energy of track")
h4 <- ggplot(spotify_songs, aes(x=energy, y="")) +
geom_boxplot() +
xlab("energy of trak")
ggarrange(h1, h3, h2, h4 + rremove("x.text"),
ncol = 2, nrow = 2)
(sum.loudness <- spotify_songs %>% summarize(Min = min(loudness, na.rm=TRUE),
Q1 = quantile(loudness, 0.25, na.rm=TRUE),
Median = quantile(loudness, 0.50, na.rm=TRUE),
Q3 = quantile(loudness, 0.75, na.rm=TRUE),
Max = max(loudness, na.rm=TRUE),
mean = mean(loudness, na.rm=TRUE),
SD = sd(loudness, na.rm=TRUE)))
(sum.energy <- spotify_songs %>% summarize(Min = min(energy, na.rm=TRUE),
Q1 = quantile(energy, 0.25, na.rm=TRUE),
Median = quantile(energy, 0.50, na.rm=TRUE),
Q3 = quantile(energy, 0.75, na.rm=TRUE),
Max = max(energy, na.rm=TRUE),
mean = mean(energy, na.rm=TRUE),
SD = sd(energy, na.rm=TRUE)))
(sum.loudness <- spotify_songs %>% summarize(Min = min(loudness, na.rm=TRUE),
Q1 = quantile(loudness, 0.25, na.rm=TRUE),
Median = quantile(loudness, 0.50, na.rm=TRUE),
Q3 = quantile(loudness, 0.75, na.rm=TRUE),
Max = max(loudness, na.rm=TRUE),
mean = mean(loudness, na.rm=TRUE),
SD = sd(loudness, na.rm=TRUE)))
(sum.energy <- spotify_songs %>% summarize(Min = min(energy, na.rm=TRUE),
Q1 = quantile(energy, 0.25, na.rm=TRUE),
Median = quantile(energy, 0.50, na.rm=TRUE),
Q3 = quantile(energy, 0.75, na.rm=TRUE),
Max = max(energy, na.rm=TRUE),
mean = mean(energy, na.rm=TRUE),
SD = sd(energy, na.rm=TRUE)))
data("spotify_songs")
?spotify_songs
h1 <- ggplot(data = spotify_songs, aes(x = loudness)) +
geom_histogram(bins = 8, colour = 1, fill = "white") +
xlab("loudness of track")
ylab("density")
h2 <- ggplot(spotify_songs, aes(x=loudness, y="")) +
geom_boxplot() +
xlab("loudness of track")
h3 <- ggplot(data = spotify_songs, aes(x = energy)) +
geom_histogram(bins = 8, colour = 1, fill = "white") +
xlab("energy of track")
ylab("density")
h4 <- ggplot(spotify_songs, aes(x=energy, y="")) +
geom_boxplot() +
xlab("energy of trak")
ggarrange(h1, h3, h2, h4 + rremove("x.text"),
ncol = 2, nrow = 2)
data("spotify_songs")
?spotify_songs
h1 <- ggplot(data = spotify_songs, aes(x = loudness)) +
geom_histogram(bins = 8, colour = 1, fill = "white") +
xlab("loudness of track")
ylab("density")
h2 <- ggplot(spotify_songs, aes(x=loudness, y="")) +
geom_boxplot() +
xlab("loudness of track")
h3 <- ggplot(data = spotify_songs, aes(x = energy)) +
geom_histogram(bins = 8, colour = 1, fill = "white") +
xlab("energy of track")
ylab("density")
h4 <- ggplot(spotify_songs, aes(x=energy, y="")) +
geom_boxplot() +
xlab("energy of trak")
ggarrange(h1, h3, h2, h4 + rremove("x.text"),
ncol = 2, nrow = 2)
data("spotify_songs")
?spotify_songs
h1 <- ggplot(data = spotify_songs, aes(x = loudness)) +
geom_histogram(bins = 8, colour = 1, fill = "white") +
xlab("loudness of track")
h2 <- ggplot(spotify_songs, aes(x=loudness, y="")) +
geom_boxplot() +
xlab("loudness of track")
h3 <- ggplot(data = spotify_songs, aes(x = energy)) +
geom_histogram(bins = 8, colour = 1, fill = "white") +
xlab("energy of track")
h4 <- ggplot(spotify_songs, aes(x=energy, y="")) +
geom_boxplot() +
xlab("energy of trak")
ggarrange(h1, h3, h2, h4,
ncol = 2, nrow = 2)
lm1.out <- lm( spotify_songs$loudness ~ spotify_songs$energy)
summary(lm1.out)
summary(spotify_songs)
plot(spotify_songs$energy, spotify_songs$loudness,
xlab="Energy of the track",
ylab="Loudness of the track", pch=19)
abline(lm1.out, lty=2, lwd=2, col="blue")
confint(lm1.out)
jpeg("Linear Regression.jpg", width = 450, height = 450)
lm1.out <- lm(spotify_songs$loudness ~ spotify_songs$energy)
summary(lm1.out)
plot(spotify_songs$loudness ~ spotify_songs$energy,
xlab="Energy",
ylab="Loudness",
main = "Energy and Loudness of All Tracks", pch=19)
abline(lm1.out, lty=2, lwd=2, col="blue")
points(mean(spotify_songs$energy),
mean(spotify_songs$loudness),
pch=19, col="green")
dev.off()
library(tidyverse)
library(openintro)
library(alr4)
library(car)
library(ggplot2)
library (ggpubr)
library(dplyr)
hardrock_df <- filter(spotify_songs, playlist_subgenre == "hard rock")
album_rock_df <- filter(spotify_songs, playlist_subgenre == "album rock")
t.test(hardrock_df$loudness,album_rock_df$loudness, alternative = "greater", conf.level = 0.95)
par(mfrow=c(1,2))
residual_p <- plot(fitted(lm1.out), residuals(lm1.out),
xlab="Fitted Values", ylab="Residuals")
abline(h=0, col= "red")
qq_p <- qqnorm(residuals(lm1.out))
qqline(residuals(lm1.out), col="blue", lty=2)
ggarrange(residual_p, qq_p)
par(mfrow=c(1,2))
residual_p <- plot(fitted(lm1.out), residuals(lm1.out),
xlab="Fitted Values", ylab="Residuals", main="Residual Plot")
abline(h=0, col= "red")
qq_p <- qqnorm(residuals(lm1.out))
qqline(residuals(lm1.out), col="blue", lty=2)
ggarrange(residual_p, qq_p)
lm1.out <- lm(log(loudness) ~ log(energy), data = data.frame(plot1))
lm1.out <- lm(spotify_songs$loudness ~ spotify_songs$energy)
summary(lm1.out)
plot(spotify_songs$loudness ~ spotify_songs$energy,
xlab="Energy",
ylab="Loudness",
main = "Energy and Loudness of All Tracks", pch=19)
abline(lm1.out, lty=2, lwd=2, col="blue")
points(mean(spotify_songs$energy),
mean(spotify_songs$loudness),
pch=19, col="green")
lm1.out <- lm(log(loudness) ~ log(energy), data = data.frame(spotify_songs))
newd <- data.frame(energy = c(0.7610))
(conf <- predict(lm2.out, newdata = newd, interval = "confidence", level = 0.95))
lm1.out <- lm(log(loudness) ~ log(energy), data = data.frame(spotify_songs))
newd <- data.frame(energy = c(0.7610))
(conf <- predict(lm1.out, newdata = newd, interval = "confidence", level = 0.95))
exp(conf)
lm1.out <- lm(log(loudness) ~ log(energy), data = data.frame(spotify_songs))
q3 <- quantile(spotify_songs$energy, 0.75)
newd <- data.frame(energy = c(0.7610))
(conf <- predict(lm1.out, newdata = newd, interval = "confidence", level = 0.95))
exp(conf)
(conf <- predict(lm1.out, newdata = newd, interval = "prediction", level = 0.95))
exp(conf)
lm1.out <- lm((loudness) ~ (energy), data = data.frame(spotify_songs))
q3 <- quantile(spotify_songs$energy, 0.75)
newd <- data.frame(energy = c(0.7610))
(conf <- predict(lm1.out, newdata = newd, interval = "confidence", level = 0.95))
exp(conf)
(conf <- predict(lm1.out, newdata = newd, interval = "prediction", level = 0.95))
exp(conf)
(conf <- predict(lm1.out, newdata = newd, interval = "prediction", level = 0.95))
lm1.out <- lm((loudness) ~ (energy), data = data.frame(spotify_songs))
q3 <- quantile(spotify_songs$energy, 0.75)
newd <- data.frame(energy = c(0.7610))
(conf <- predict(lm1.out, newdata = newd, interval = "confidence", level = 0.95))
Music.p <- spotify_songs %>% filter(playlist_genre == "pop")
Music.r <- spotify_songs %>% filter(playlist_genre == "r&b")
t.test(Music.p$loudness, Music.r$loudness)
Music.p <- spotify_songs %>% filter(playlist_genre == "pop")
Music.r <- spotify_songs %>% filter(playlist_genre == "r&b")
t.test(Music.p$loudness, Music.r$loudness)
trap <- spotify_songs %>% filter(playlist_subgenre == "trap")
lm1.out <- lm(trap$speechiness ~ trap$loudness)
summary(lm1.out)
plot(trap$loudness, trap$speechiness,
xlab="loudness",
ylab="speechiness", pch=19, main ="Regression model")
abline(lm1.out, lty=2, lwd=2, col="blue")
(summary(spotify_songs$loudness))
lm2.out <- lm((speechiness) ~ (loudness),
data = data.frame(trap))
newd <- data.frame(loudness = c(-4.645))
(conf <- predict(lm2.out, newdata = newd, interval = "prediction", level = 0.95))
(summary(spotify_songs$loudness))
lm2.out <- lm((speechiness) ~ (loudness),
data = data.frame(trap))
newd <- data.frame(loudness = c(-4.645))
(conf <- predict(lm2.out, newdata = newd, interval = "confidence", level = 0.95))
confint(lm1.out)
par(mfrow=c(1,2))
p1 <- plot(fitted(lm1.out), residuals(lm1.out), xlab="Fitted Values",
ylab="Residuals", main ="Residuals Plot")
abline(h=0, col="blue")
p3 <- qqnorm(residuals(lm1.out))
qqline(residuals(lm1.out), col="blue", lty=2)
ggarrange(p1, p3)
par(mfrow=c(1,2))
residual_p <- plot(fitted(lm1.out), residuals(lm1.out),
xlab="Fitted Values", ylab="Residuals", main="Residual Plot")
abline(h=0, col= "red")
qq_p <- qqnorm(residuals(lm1.out))
qqline(residuals(lm1.out), col="blue", lty=2)
ggarrange(residual_p, qq_p)
par(mfrow=c(1,2))
residual_p <- plot(fitted(lm1.out), residuals(lm1.out),
xlab="Fitted Values", ylab="Residuals", main="Residual Plot")
abline(h=0, col= "red")
qq_p <- qqnorm(residuals(lm1.out))
qqline(residuals(lm1.out), col="blue", lty=2)
par(mfrow=c(1,2))
residual_p <- plot(fitted(lm1.out), residuals(lm1.out),
xlab="Fitted Values", ylab="Residuals", main="Residual Plot")
abline(h=0, col= "red")
qq_p <- qqnorm(residuals(lm1.out))
qqline(residuals(lm1.out), col="blue", lty=2)
ggarrange(residual_p, qq_p)
lm1.out <- lm(spotify_songs$loudness ~ spotify_songs$energy)
summary(lm1.out)
plot(spotify_songs$loudness ~ spotify_songs$energy,
xlab="Energy",
ylab="Loudness",
main = "Energy and Loudness of All Tracks", pch=19)
abline(lm1.out, lty=2, lwd=2, col="blue")
points(mean(spotify_songs$energy),
mean(spotify_songs$loudness),
pch=19, col="green")
par(mfrow=c(1,2))
residual_p <- plot(fitted(lm1.out), residuals(lm1.out),
xlab="Fitted Values", ylab="Residuals", main="Residual Plot")
abline(h=0, col= "red")
qq_p <- qqnorm(residuals(lm1.out))
qqline(residuals(lm1.out), col="blue", lty=2)
par(mfrow=c(1,2))
p1 <- plot(fitted(lm1.out), residuals(lm1.out), xlab="Fitted Values",
ylab="Residuals", main ="Residuals Plot")
abline(h=0, col="blue")
p3 <- qqnorm(residuals(lm1.out))
qqline(residuals(lm1.out), col="blue", lty=2)
ggarrange(p1, p3)
lm1.out <- lm((loudness) ~ (energy), data = data.frame(spotify_songs))
q3 <- quantile(spotify_songs$energy, 0.75)
newd <- data.frame(energy = c(0.7610))
(conf <- predict(lm1.out, newdata = newd, interval = "confidence", level = 0.95))
(conf <- predict(lm1.out, newdata = newd, interval = "prediction", level = 0.95))
par(mfrow=c(1,2))
residual_p <- plot(fitted(lm1.out), residuals(lm1.out),
xlab="Fitted Values", ylab="Residuals", main="Residual Plot")
abline(h=0, col= "red")
qq_p <- qqnorm(residuals(lm1.out))
qqline(residuals(lm1.out), col="blue", lty=2)
lm1.out <- lm(spotify_songs$loudness ~ spotify_songs$energy)
summary(lm1.out)
plot(spotify_songs$loudness ~ spotify_songs$energy,
xlab="Energy",
ylab="Loudness",
main = "Energy and Loudness of All Tracks", pch=19)
abline(lm1.out, lty=2, lwd=2, col="blue")
points(mean(spotify_songs$energy),
mean(spotify_songs$loudness),
pch=19, col="green")
df2a <- spotify_songs %>% filter(loudness > 30)
lm1.out <- lm(spotify_songs$loudness ~ spotify_songs$energy)
summary(lm1.out)
plot(spotify_songs$loudness ~ spotify_songs$energy,
xlab="Energy",
ylab="Loudness",
main = "Energy and Loudness of All Tracks", pch=19)
abline(lm1.out, lty=2, lwd=2, col="blue")
points(mean(spotify_songs$energy),
mean(spotify_songs$loudness),
pch=19, col="green")
df2a <- spotify_songs %>% filter(loudness > 30)
lm1.out <- lm(df2a$loudness ~ df2a$energy)
df2a <- spotify_songs %>% filter(loudness > 30)
lm1.out <- lm(df2a$loudness ~ df2a$energy)
df2a <- spotify_songs %>% filter(loudness > 30)
lm1.out <- lm(spotify_songs$loudness ~ spotify_songs$energy)
summary(lm1.out)
plot(spotify_songs$loudness ~ spotify_songs$energy,
xlab="Energy",
ylab="Loudness",
main = "Energy and Loudness of All Tracks", pch=19)
abline(lm1.out, lty=2, lwd=2, col="blue")
points(mean(spotify_songs$energy),
mean(spotify_songs$loudness),
pch=19, col="green")
View(df2a)
df2a <- spotify_songs %>% filter(loudness > -30)
View(df2a)
df2a <- spotify_songs %>% filter(loudness > -30)
lm1.out <- lm(df2a$loudness ~ df2a$energy)
summary(lm1.out)
plot(df2a$loudness ~ df2a$energy,
xlab="Energy",
ylab="Loudness",
main = "Energy and Loudness of All Tracks", pch=19)
abline(lm1.out, lty=2, lwd=2, col="blue")
points(mean(df2a$energy),
mean(df2a$loudness),
pch=19, col="green")
par(mfrow=c(1,2))
residual_p <- plot(fitted(lm1.out), residuals(lm1.out),
xlab="Fitted Values", ylab="Residuals", main="Residual Plot")
abline(h=0, col= "red")
qq_p <- qqnorm(residuals(lm1.out))
qqline(residuals(lm1.out), col="blue", lty=2)
df2a <- spotify_songs %>% filter(loudness > -25)
lm1.out <- lm(df2a$loudness ~ df2a$energy)
summary(lm1.out)
plot(df2a$loudness ~ df2a$energy,
xlab="Energy",
ylab="Loudness",
main = "Energy and Loudness of All Tracks", pch=19)
abline(lm1.out, lty=2, lwd=2, col="blue")
points(mean(df2a$energy),
mean(df2a$loudness),
pch=19, col="green")
par(mfrow=c(1,2))
residual_p <- plot(fitted(lm1.out), residuals(lm1.out),
xlab="Fitted Values", ylab="Residuals", main="Residual Plot")
abline(h=0, col= "red")
qq_p <- qqnorm(residuals(lm1.out))
qqline(residuals(lm1.out), col="blue", lty=2)
jpeg("Linear Regression.jpg", width = 450, height = 450)
df2a <- spotify_songs %>% filter(loudness > -25)
lm1.out <- lm(df2a$loudness ~ df2a$energy)
summary(lm1.out)
plot(df2a$loudness ~ df2a$energy,
xlab="Energy",
ylab="Loudness",
main = "Energy and Loudness of All Tracks", pch=19)
abline(lm1.out, lty=2, lwd=2, col="blue")
points(mean(df2a$energy),
mean(df2a$loudness),
pch=19, col="green")
dev.off()
df2a <- spotify_songs %>% filter(loudness > -25)
lm1.out <- lm(df2a$loudness ~ df2a$energy)
summary(lm1.out)
plot(df2a$loudness ~ df2a$energy,
xlab="Energy",
ylab="Loudness",
main = "Energy and Loudness of All Tracks", pch=19)
abline(lm1.out, lty=2, lwd=2, col="blue")
points(mean(df2a$energy),
mean(df2a$loudness),
pch=19, col="green")
par(mfrow=c(1,2))
residual_p <- plot(fitted(lm1.out), residuals(lm1.out),
xlab="Fitted Values", ylab="Residuals", main="Residual Plot")
abline(h=0, col= "red")
qq_p <- qqnorm(residuals(lm1.out))
qqline(residuals(lm1.out), col="blue", lty=2)
par(mfrow=c(1,2))
p1 <- plot(fitted(lm1.out), residuals(lm1.out), xlab="Fitted Values",
ylab="Residuals", main ="Residuals Plot")
abline(h=0, col="blue")
p3 <- qqnorm(residuals(lm1.out))
qqline(residuals(lm1.out), col="blue", lty=2)
gc()
print_green <- fuction(name){
source("~/Desktop/lecture 2 3.R")
#cat("Hi! ", name)
paste("Hi! ", name)
print_greet <- function(name){
#cat("Hi! ", name)
paste("Hi! ", name)
}
source("~/Desktop/lecture 2 3.R")
source("~/Desktop/lecture 2 3.R")
source("~/Desktop/lecture 2 3.R")
source("~/Desktop/lecture 2 3.R")
source("~/Desktop/lecture 2 3.R")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/Desktop/Lecture 3.R")
source("~/Desktop/Lecture 3.R")
source("~/Desktop/Lecture 3.R")
source("~/Desktop/Lecture 3.R")
source("~/Desktop/Lecture 3.R")
source("~/Desktop/Lecture 3.R")
source("~/Desktop/Lecture 3.R", echo=TRUE)
source("~/Desktop/Lecture 3.R", echo=TRUE)
source("~/Desktop/Lecture 3.R")
can_coffee(7.5，8)
source("~/Desktop/Lecture 3.R")
source("~/Desktop/Lecture 3.R")
source("~/Desktop/Lecture 3.R")
source("~/Desktop/lecture 2 3.R")
source("~/Desktop/lecture 2 3.R")
source("~/Desktop/lecture 2 3.R")
source("~/Desktop/lecture 2 3.R")
source("~/Desktop/lecture 2 3.R")
source("~/Desktop/lecture 2 3.R")
print("Hi, my name is" + my_name)
source("~/Desktop/lecture 2 3.R")
source("~/Desktop/lecture 2 3.R")
source("~/Desktop/lecture 2 3.R")
source("~/Desktop/lecture 2 3.R")
source("~/Desktop/lecture 2 3.R")
source("~/Desktop/lecture 2 3.R")
source("~/Desktop/lecture 2 3.R")
install.package(“stringr”)
install.package(stringr)
install.package("stringr")
install.package("stringr")
source("~/Desktop/lecture 2 3.R")
source("~/Desktop/lecture 2 3.R")
source("~/Desktop/Lecture 3.R")
source("~/Desktop/Lecture 3.R")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
shiny::runApp('Desktop/Info 201/Final Project/final-projects-TIKTOK')
